model User {
  id String @id @default(uuid())

  // Auth
  email    String  @unique
  username String  @unique
  password String // hashed password
  googleId String? @unique // google id
  phone    String?

  // Profile
  name      String  @default("Unnamed User")
  avatarUrl String? @default("https://www.gravatar.com/avatar/000000000000000000000000000000?d=mp&f=y")

  // Address
  country String?
  city    String?
  state   String?
  zip     String?

  // Settings
  role   UserRole   @default(SELLER)
  status UserStatus @default(ACTIVE)

  // Logout tracking
  isLoggedIn   Boolean   @default(false)
  lastLoginAt  DateTime?
  lastLogoutAt DateTime?
  lastActiveAt DateTime?

  // OTP
  isVerified   Boolean   @default(false)
  otp          String? // 4 digit hashed OTP code
  otpExpiresAt DateTime?
  otpType      OtpType?

  // Stripe
  stripeCustomerId String? @unique // ensure during first payment intent creation

  // Subscription, based on last successful payment (overwrite previous one)
  currentPlanId     String?
  currentPlan       SubscriptionPlan?   @relation(fields: [currentPlanId], references: [id], onDelete: SetNull)
  currentPlanStatus SubscriptionStatus? // ensure during successful payment in webhook

  userSubscription UserSubscription[]
  invoices         Invoice[]

  // Notifications
  notifications UserNotification[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("users")
}

enum UserRole {
  SUPER_ADMIN
  ADMIN
  SELLER
}

enum UserStatus {
  ACTIVE
  INACTIVE
  DELETED
}

enum OtpType {
  VERIFICATION // for email verification
  RESET //for reset password
}
